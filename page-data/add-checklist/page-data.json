{"componentChunkName":"component---node-modules-gatsby-theme-documentation-src-templates-doc-js","path":"/add-checklist","result":{"data":{"doc":{"id":"5f1db872-ee68-54a6-850d-4fa308e6e8fe","title":"","description":null,"excerpt":"PR checklist to add a new application to the New Relic One Catalog Nerdpack Approver Provide the  GitHub handle  for the final Approver ofâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"pr-checklist-to-add-a-new-application-to-the-new-relic-one-catalog\"\n  }, \"PR checklist to add a new application to the New Relic One Catalog\"), mdx(\"h2\", {\n    \"id\": \"nerdpack-approver\"\n  }, \"Nerdpack Approver\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Provide the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"GitHub handle\"), \" for the final Approver of this Nerdpack in your Pull Request. \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Note: this is the person who will need to provide explicit sign off for the change ahead of deployment.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If known, what is the requested date for the deployment of this functionality? \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Note: this information is regarded as a courtesy. Neither New Relic nor the \", mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"nr1-catalog maintainer team\"), \" are under any obligation to meet this request. It simply provides a useful target for completion.\"))), mdx(\"h3\", {\n    \"id\": \"functional-changes\"\n  }, \"Functional Changes\"), mdx(\"p\", null, \"List the functional changes in the pull request, highlighting the major features of the application.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Major feature #1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Major feature #2\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Note: The rest of this template is a checklist and guide for ensuring that your pull request is swiftly and consistently approved.\")), mdx(\"h2\", {\n    \"id\": \"project-naming-guidance\"\n  }, \"Project Naming Guidance\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Repo names and titles must not include the word \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"New Relic\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"newrelic\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Repo names and titles should be named with human-readable, functionally descriptive names\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Repo names must be unique within the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nr1-catalog\"), \" repository to support the internal project mapping of submodules to uuid\\u2019s\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Project titles should use title case (e.g. \\u201CDeployment Analyzer\\u201D, not \\u201CDeployment analyzer\\u201D)\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Projects must not include profanity or crude language in titles, repo names, or any documentation\")), mdx(\"h2\", {\n    \"id\": \"basic-nerdpack-validation\"\n  }, \"Basic Nerdpack Validation\"), mdx(\"p\", null, \"Validate that the following are present in your PR ahead of submitting:\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Your application has been added as a \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://git-scm.com/book/en/v2/Git-Tools-Submodules\"\n  }), \"git submodule\"), \" to the nr1-catalog repo under the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"apps\"), \" directory (i.e. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nr1-catalog/apps/YOUR_REPO\"), \" with an entry in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".gitmodules\"), \" file)\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"No other code in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nr1-catalog\"), \" repo has been modified by your PR\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"the project contains only one Nerdpack with as many artifacts (launchers, nerdlets, etc.) as you choose\")), mdx(\"h3\", {\n    \"id\": \"features-and-roadmap\"\n  }, \"Features and Roadmap\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Does this application have a workflow and/or documentation within the UI for managing an empty state?\")), mdx(\"h2\", {\n    \"id\": \"repository-setup\"\n  }, \"Repository setup\"), mdx(\"p\", null, \"Your linked submodule repository must contain:\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"an \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nr1.json\"), \" file in the root of your project \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-catalog/tree/master/examples/nr1.json\"\n  }), \"example here\"), \" containing the following fields:\", mdx(\"ul\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"contains-task-list\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"schemaType\"), \" with a value of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NERDPACK\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"id\"), \" containing a uuid set by the nr1 CLI (i.e. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nr1 nerdpack:uuid -gf\"), \")\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"displayName\"), \" containing the displayed name of the Nerdpack in the New Relic One Catalog (ex. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Browser Analyzer\"), \")\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"description\"), \" containing the short description of the application's functionality\"))), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"icon.png\"), \" in the root of your project with the dimensions of \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"48x48\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"package.json\"), \" (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-catalog/tree/master/examples/package.json\"\n  }), \"example here\"), \") that contains:\", mdx(\"ul\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"contains-task-list\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"version\"), \" that follows \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"website.link\"\n  }), \"semantic versioning standards\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"scripts.eslint-check\"), \" command\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"scripts.eslint-fix\"), \" command\"))), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"a valid \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"LICENSE\"), \" file containing an approved permissive license (ex. Apache 2, MIT, BSD) (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-catalog/tree/master/examples/LICENSE\"\n  }), \"example here\"), \")\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Note: we do not permit projects that contain \", mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"any\"), \" \", mdx(\"a\", _extends({\n    parentName: \"em\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Viral_license\"\n  }), \"viral licensing\"), \" into the New Relic One Catalog.\")), mdx(\"h3\", {\n    \"id\": \"catalog-metadata\"\n  }, \"Catalog Metadata\"), mdx(\"p\", null, \"Your project must contain a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"catalog\"), \" directory with the following:\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"config.json\"), \" \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-catalog/tree/master/examples/catalog/config.json\"\n  }), \"see example\"), \" containing the following fields:\", mdx(\"ul\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"contains-task-list\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"tagline\"), \" brief headline for the application, \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"30\"), \" characters or less\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"repository\"), \" URL to the git repository, less than \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"1000\"), \" characters long\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"details\"), \" description of the usage and utility of the application, less than \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"1000\"), \" characters using carriage returns for formatting and no markdown or HTML markup\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"support\"), \" object containing:\", mdx(\"ul\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"contains-task-list\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"issues\"), \" \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"valid URL\"), \" to the repositories issues list (generally the GitHub issues tab for the repo)\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"email\"), \" a \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"valid email address\"), \" of the team supporting the application (for New Relic, that generally takes the form of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"opensource+<repo name>@newrelic.com\"), \")\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"community\"), \" URL to a support thread, forum, or website for troubleshooting and usage support\"))), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"whatsNew\"), \" a bulleted list of customer-facing changes in this version, less than \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"500\"), \" characters using carriage returns for formatting and no markdown or HTML markup\"))), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"screenshots\"), \" directory containing at most 6 image files that each comply with the following guidance:\", mdx(\"ul\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"contains-task-list\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"3:2 aspect ratio\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \".png format\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"landscape orientation\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"at least 1600px wide\"))), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"documentation.md\"), \" a markdown file  containing no HTML markup nor any markdown images (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-catalog/tree/master/examples/catalog/documentation.md\"\n  }), \"example here\"), \")\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"(optional) \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"additionalInfo.md\"), \" a markdown file  containing no HTML markup nor any markdown images (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-catalog/tree/master/examples/catalog/additionalInfo.md\"\n  }), \"example here\"), \")\")), mdx(\"h2\", {\n    \"id\": \"code-review-guidance\"\n  }, \"Code Review Guidance\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"The following are meant to highlight the types of common issues that can degraded performance for your application.\")), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not violate the pinned versions of libraries for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"react\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"react-dom\"), \" of \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"16.6.3\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"d3\"), \" of \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"3.5.17\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not contain hard-coded New Relic account ids, user ids, or other identifiers that should be retrieved via the NR1 API based on the user viewing the nerdpack\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code makes efficient use of the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PlatformStateContext\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NerdletStateContext\"), \" (i.e. not wrapping the entire Nerdlet in a state context when it's not necessary)\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code avoids the use of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"await\"), \" with React's \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"setState\"), \" method\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code handles the asynchronous nature of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"setState\"), \" updates\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not perform imperative data fetching (ex. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NerdGraphQuery.query\"), \") in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"render\"), \" method\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Whenever appropriate, the code's React components extend \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"React.PureComponent\"), \" vs. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"React.Component\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code's React components that do extend \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"React.Component\"), \" implement the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"shouldComponentUpdate\"), \" React lifecycle method\")), mdx(\"h3\", {\n    \"id\": \"uiux-review-guidance\"\n  }, \"UI/UX Review Guidance\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not override or amend core NR1 styles\")), mdx(\"h3\", {\n    \"id\": \"security-review-guidance\"\n  }, \"Security Review Guidance\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not contain hard-coded API keys, access tokens, or other security credentials\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not include additional \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SCRIPT\"), \" tags\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code avoids the use of the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"eval\"), \" command\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code avoids the use of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Function\"), \" as a constructor (i.e. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"new Function(...)\"), \")\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code avoids the use of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dangerouslySetInnerHTML\"), \" in React\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not write data to an outside source\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not interact with an outside URL without clear documentation on what is being retrieved\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not write unspecified object data to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NerdStorage\"))), mdx(\"h3\", {\n    \"id\": \"if-appropriate-nerdstorage-guidance\"\n  }, mdx(\"em\", {\n    parentName: \"h3\"\n  }, \"If appropriate\"), \", NerdStorage Guidance\"), mdx(\"p\", null, \"Where appropriate, the code follows the guidance regarding \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.newrelic.com/build-tools/new-relic-one-applications/nerdstorage\"\n  }), \"NerdStorage limits and usage\")), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not store New Relic credentials in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NerdStorage\"), \" (GraphQL should be used to access New Relic data)\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not store third-party SaaS credentials in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NerdStorage\"), \" \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"UNLESS\"), \" a warning about the lack of encryption at rest and possibility of access by New Relic employees is prominently displayed, such as in the GitHub README (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-github/blob/master/README.md#using-github-personal-access-tokens\"\n  }), \"example here\"), \") and/or in documentation portion of the New Relic One Catalog documentation (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-github/blob/master/catalog/documentation.md#using-github-personal-access-tokens\"\n  }), \"example here\"), \")\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not store personal data (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.gdpreu.org/the-regulation/key-concepts/personal-data/\"\n  }), \"PII\"), \") in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NerdStorage\"))), mdx(\"h2\", {\n    \"id\": \"if-submitted-within-new-relic\"\n  }, \"If submitted within New Relic\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Note: These concluding sections of instruction are for projects submitted by New Relic teams. If that doesn't apply to you, ignore this section in your PR.\")), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"a standard \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"CONTRIBUTING.md\"), \" file in the root of the project (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-catalog/tree/master/examples/CONTRIBUTING.md\"\n  }), \"example here\"), \")\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"a standard \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"CODE_OF_CONDUCT.md\"), \" file in the root of the project (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-catalog/tree/master/examples/CODE_OF_CONDUCT.md\"\n  }), \"example here\"), \")\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"a standard \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cla.md\"), \" file in the root of the project (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-catalog/tree/master/examples/cla.md\"\n  }), \"example here\"), \")\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"README.md\"), \" that contains:\", mdx(\"ul\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"contains-task-list\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"the \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/open-source-office/blob/master/examples/categories/index.md#nr1-catalog\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"New Relic One Catalog\")), \" project header at the top of the file\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Description what the project does\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Explains cloning and setup of the code(including installing dependencies) for local review\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"How run the nerdpack locally\"))), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"your project makes use of New Relic's open source \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/eslint-plugin-newrelic\"\n  }), \"eslint configuration\"), \" by including the following:\", mdx(\"ul\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"contains-task-list\"\n  }), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"include the appropriate development dependencies by running \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm install --save-dev @newrelic/eslint-plugin-newrelic eslint prettier\"), \" (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-catalog/tree/master/examples/package.json\"\n  }), \"see example\"), \")\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"include the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".eslintrc.js\"), \" configuration in the root of your project \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-catalog/tree/master/examples/.eslintrc.js\"\n  }), \"example here\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"include the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".prettierrc.js\"), \" configuration in the root of your project \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-catalog/tree/master/examples/.prettierrc.js\"\n  }), \"example here\"))))), mdx(\"h3\", {\n    \"id\": \"additional-code-review-guidance-for-new-relic\"\n  }, \"Additional Code Review Guidance for New Relic\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Note: this is for New Relic projects only.\")), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"JavaScript in your nerdpack must use ES6\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code should make use of the NR1 components. Whenever possible, the code should avoid using an external OSS component in favor of highlighting the NR1 SDK's capabilities\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code should make use of the NR1 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Stack\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Grid\"), \" components for layout, as these components respect spacing automatically (\", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Note that CSS flexbox and grid are more complex than what they seem at first and sometimes they\\u2019re a bit tricky to get exact results.\"), \")\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"PR checklist to add a new application to the New Relic One Catalog"},{"value":"Nerdpack Approver"},{"value":"Functional Changes"},{"value":"Project Naming Guidance"},{"value":"Basic Nerdpack Validation"},{"value":"Features and Roadmap"},{"value":"Repository setup"},{"value":"Catalog Metadata"},{"value":"Code Review Guidance"},{"value":"UI/UX Review Guidance"},{"value":"Security Review Guidance"},{"value":"If appropriate, NerdStorage Guidance"},{"value":"If submitted within New Relic"},{"value":"Additional Code Review Guidance for New Relic"}]}},"pageContext":{"id":"5f1db872-ee68-54a6-850d-4fa308e6e8fe","slug":"/add-checklist","previous":null,"next":{"id":"f9083f0e-0c6c-5719-96fe-2683be03ae1f","slug":"/reference"}}}}