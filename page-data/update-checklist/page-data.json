{"componentChunkName":"component---node-modules-gatsby-theme-documentation-src-templates-doc-js","path":"/update-checklist","result":{"data":{"doc":{"id":"53af09f4-3c6f-58a3-86a6-51631b4f3062","title":"","description":null,"excerpt":"PR checklist to update an application already in the New Relic One Catalog Nerdpack Approver List the  GitHub handle  for the final Approverâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"pr-checklist-to-update-an-application-already-in-the-new-relic-one-catalog\"\n  }, \"PR checklist to update an application already in the New Relic One Catalog\"), mdx(\"h2\", {\n    \"id\": \"nerdpack-approver\"\n  }, \"Nerdpack Approver\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"List the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"GitHub handle\"), \" for the final Approver of this Nerdpack. \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Note: this is the person who will need to provide explicit sign off for the change ahead of deployment.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What is the requested date for the deployment of this functionality? \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"Note: this information is regarded as a courtesy. Neither New Relic nor the \", mdx(\"strong\", {\n    parentName: \"em\"\n  }, \"nr1-catalog maintainer team\"), \" are under any obligation to meet this request. It simply provides a useful target for completion.\"))), mdx(\"h3\", {\n    \"id\": \"functional-changes\"\n  }, \"Functional Changes\"), mdx(\"p\", null, \"List the functional changes in the pull request.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Major feature #1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Major feature #2\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Note: The rest of this template is a checklist and guide for ensuring that your pull request is swiftly and consistently approved.\")), mdx(\"h2\", {\n    \"id\": \"basic-nerdpack-validation\"\n  }, \"Basic Nerdpack Validation\"), mdx(\"p\", null, \"Validate that the following are present in your PR ahead of submitting:\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Your application's reference in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".gitmodules\"), \" file is updated to the check-in your expect\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"No other code in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"nr1-catalog\"), \" repo has been modified by your PR\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"the project contains only one Nerdpack with as many artifacts (launchers, nerdlets, etc.) as you choose\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"No changes have been made in the repo name or title\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Your linked submodule repository contains an updated semantic version number\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Your linked submodule repository contains updated \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"whatsNew\"), \" field in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"catalog/config.json\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"(if appropriate) Your linked submodule repository contains updated catalog documentation and screenshots\")), mdx(\"h2\", {\n    \"id\": \"code-review-guidance\"\n  }, \"Code Review Guidance\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"The following are meant to highlight the types of common issues that can degraded performance for your application.\")), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not violate the pinned versions of libraries for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"react\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"react-dom\"), \" of \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"16.6.3\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"d3\"), \" of \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"3.5.17\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not contain hard-coded New Relic account ids, user ids, or other identifiers that should be retrieved via the NR1 API based on the user viewing the nerdpack\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code makes efficient use of the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PlatformStateContext\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NerdletStateContext\"), \" (i.e. not wrapping the entire Nerdlet in a state context when it's not necessary)\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code avoids the use of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"await\"), \" with React's \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"setState\"), \" method\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code handles the asynchronous nature of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"setState\"), \" updates\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not perform imperative data fetching (ex. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NerdGraphQuery.query\"), \") in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"render\"), \" method\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"Whenever appropriate, the code's React components extend \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"React.PureComponent\"), \" vs. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"React.Component\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code's React components that do extend \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"React.Component\"), \" implement the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"shouldComponentUpdate\"), \" React lifecycle method\")), mdx(\"h3\", {\n    \"id\": \"uiux-review-guidance\"\n  }, \"UI/UX Review Guidance\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not override or amend core NR1 styles\")), mdx(\"h3\", {\n    \"id\": \"security-review-guidance\"\n  }, \"Security Review Guidance\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not contain hard-coded API keys, access tokens, or other security credentials\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not include additional \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"SCRIPT\"), \" tags\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code avoids the use of the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"eval\"), \" command\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code avoids the use of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Function\"), \" as a constructor (i.e. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"new Function(...)\"), \")\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code avoids the use of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dangerouslySetInnerHTML\"), \" in React\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not write data to an outside source\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not interact with an outside URL without clear documentation on what is being retrieved\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not write unspecified object data to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NerdStorage\"))), mdx(\"h3\", {\n    \"id\": \"if-appropriate-nerdstorage-guidance\"\n  }, mdx(\"em\", {\n    parentName: \"h3\"\n  }, \"If appropriate\"), \", NerdStorage Guidance\"), mdx(\"p\", null, \"Where appropriate, the code follows the guidance regarding \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.newrelic.com/build-tools/new-relic-one-applications/nerdstorage\"\n  }), \"NerdStorage limits and usage\")), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not store New Relic credentials in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NerdStorage\"), \" (GraphQL should be used to access New Relic data)\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not store third-party SaaS credentials in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NerdStorage\"), \" \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"UNLESS\"), \" a warning about the lack of encryption at rest and possibility of access by New Relic employees is prominently displayed, such as in the GitHub README (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-github/blob/master/README.md#using-github-personal-access-tokens\"\n  }), \"example here\"), \") and/or in documentation portion of the New Relic One Catalog documentation (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/newrelic/nr1-github/blob/master/catalog/documentation.md#using-github-personal-access-tokens\"\n  }), \"example here\"), \")\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", \"The code does not store personal data (\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.gdpreu.org/the-regulation/key-concepts/personal-data/\"\n  }), \"PII\"), \") in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NerdStorage\"))));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"PR checklist to update an application already in the New Relic One Catalog"},{"value":"Nerdpack Approver"},{"value":"Functional Changes"},{"value":"Basic Nerdpack Validation"},{"value":"Code Review Guidance"},{"value":"UI/UX Review Guidance"},{"value":"Security Review Guidance"},{"value":"If appropriate, NerdStorage Guidance"}]}},"pageContext":{"id":"53af09f4-3c6f-58a3-86a6-51631b4f3062","slug":"/update-checklist","previous":{"id":"5f1db872-ee68-54a6-850d-4fa308e6e8fe","slug":"/add-checklist"},"next":{"id":"d6b8b5c6-604e-58de-9e22-63c6a979f027","slug":"/"}}}}