{"componentChunkName":"component---node-modules-gatsby-theme-documentation-src-templates-doc-js","path":"/guides/capturing-screenshots","result":{"data":{"doc":{"id":"b46e2687-1c11-5948-a3dc-88030e777685","title":"","description":null,"excerpt":"Capturing Screenshots for the New Relic One Catalog This is one effective method for capturing screenshots that adhere to the catalogâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"capturing-screenshots-for-the-new-relic-one-catalog\"\n  }, \"Capturing Screenshots for the New Relic One Catalog\"), mdx(\"p\", null, \"This is one effective method for capturing screenshots that adhere to the catalog requirements:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use the responsive device layout in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Chrome\"), \" devtools\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Set Device Pixel Ratio (DPR) to 1.0 (Note: you might need to click \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Add device pixel ratio\"), \" first from the menu in the top-right to be able to set it)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Set resolution to be 3:2 and between 1600px and 2400px wide (Note \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"1602x1068\"), \" is recommended to keep the image dense with content)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Click \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Capture screenshot\"), \" from the menu\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Save that file to your \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"catalog/screenshots\"), \" directory under the naming convention \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"screenshot[xx].png\"))), mdx(Screenshot, {\n    mdxType: \"Screenshot\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"value":"Capturing Screenshots for the New Relic One Catalog"}]}},"pageContext":{"id":"b46e2687-1c11-5948-a3dc-88030e777685","slug":"/guides/capturing-screenshots","previous":{"id":"dd3f915d-f743-5a29-9bbc-edd073d3f5fe","slug":"/guides"},"next":{"id":"be658af3-ea52-5591-9d63-403931d1d609","slug":"/guides/workflow"}}}}